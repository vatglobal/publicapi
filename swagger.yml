openapi: '3.0.2'

info:
  title: vsuite public api
  version: '1.0'
  description: Documentation for vsuites public API. Our public API lets you interact with key parts of the vsuite product
  license:
    name: MIT
  contact:
    name: vsuite technical team
    email: support@myvsuite.com
  x-logo:
    url: 'https://raw.githubusercontent.com/vatglobal/publicapi/master/vsuite_logo.png'
    altText: vsuite logo
  x-servers:
    - url: https://server.myvsuite.com/api/v1/
    - description: Version one API URL

tags:
  - name: Entity
    description: Manage your entities
  - name: Organization
    description: Manage your organizations
  - name: Country
    description: Country information
  - name: Currency
    description: Currency information
  - name: VAT return
    description: Manage
  - name: Vat number
    description: Manage your vat number objects
  - name: Saved filing periods
    description: Manage your saved filing period objects
  - name: Period
    description: Manage your period objects
  - name: Standard template
    description: Standard templates are how we map transaction data to a saved filing period

servers:
  - url: https://server.myvsuite.com/api/v1/

# Authentication and schemas
components:
  
  securitySchemes:
    
    ApiKeyAuth:
      type: apiKey
      in: header
      name: HTTP_AUTHORIZATION
      description: "Use your assigined API key to authenticate. To request one, please email the vsuite technical team."
  
  schemas:
    
    errorMessageDetail:
      type: array
      items:
        type: string
        example: Reason why authentication failed

    errorMessageDict:
      type: object
      properties:
        error_keyword:
          type: array
          items:
            type: string
            example: Details of the error


    id:
      type: string
      format: uuid
      example: fc096d1a-9535-4d8b-b504-d86a66d92de8

    ListEntity:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/Entity"
    Entity:
      type: object
      required:
        - id
        - name
        - organization
        - country
        - colour
        - tax_number
        - internal_ref
      properties:
        id:
          $ref: "#/components/schemas/id"
        name:
          type: string
        organization:
          type: object
          required:
            - id
            - name
            - hide_organization
          properties:
            id:
              $ref: "#/components/schemas/id"
            name:
              type: string
            hide_organization:
              type: boolean
        country:
          $ref: "#/components/schemas/id"
        colour:
          type: string
          example: rgba(4%,4,4%,0.4)
          description: "String representing RGBA or HSL colour. Example: rgba(4%,4,4%,0.4)"
        tax_number: 
          type: string
          description: "Tax Identification Number. This is NOT the VAT number."
    
    ListOrganization:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/Organization"
    Organization:
      type: object
      required:
        - id
        - name
        - management_group
        - hide_organization
        - internal_ref
        - vflow_block_weekends
      properties:
        id:
          $ref: "#/components/schemas/id"
        name:
          type: string
        management_group:
          $ref: "#/components/schemas/id"
        hide_organization:
          type: boolean
        internal_ref:
          type: string
        vflow_block_weekends:
          type: boolean
    
    ListCurrencies:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/Currency"
    Currency:
      type: object
      required:
        - id
        - iso
        - name
        - symbol
      properties:
        id:
          $ref: "#/components/schemas/id"
        iso:
          type: string
          description: "3 letter iso code for the currency"
        name:
          type: string
        symbol:
          type: string
          example: "&#65;&#102;"
    
    ListCountries:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/Country"
    Country:
      type: object
      required:
        - id
        - iso
        - iso_3
        - name
        - phone_prefix
        - is_eu
        - currency
      properties:
        id:
          $ref: "#/components/schemas/id"
        iso:
          type: string
          description: "2 letter iso code for the country"
        iso_3:
          type: string
          description: "iso 3 code"
        name:
          type: string
        phone_prefix:
          type: string
          example: "43"
        is_eu:
          type: boolean
          description: "Is this country in the EU?"
        currency:
          $ref: "#/components/schemas/id"

    ListPeriods:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/Period"
    Period:
      type: object
      required:
        - id
        - country
        - filing_period
        - filing_type
        - is_day_editable
        - is_moneth_editable
        - comment
        - is_automatically_created
      properties:
        id:
          $ref: "#/components/schemas/id"
        country:
          $ref: "#/components/schemas/id"
        filing_period:
          type: string
        filing_type:
          type: object
          required:
            - id
            - name_short
            - name_long
          properties:
            id:
              $ref: "#/components/schemas/id"
            name_short:
              type: string
            name_long:
              type: string
        is_day_editable:
          type: boolean
        is_moneth_editable:
          type: boolean
        comment:
          type: string
        is_automatically_created:
          type: boolean

    ListSavedFilingPeriods:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/SavedFilingPeriod"
    SavedFilingPeriod:
      type: object
      required:
        - id
        - filing_status
        - outcome_type
        - outcome_amount
        - comment_accept_reject
        - entity
        - entity_name
        - entity_colour
        - vat_number_period
        - filing_type
        - country
        - country_iso
        - filing_period
        - months_to_add
        - date_filing_due
        - date_period_ending
        - from_day_weekend
        - is_color_inverted
        - number_files_attached
        - is_vat_return_submitted
        - submission_receipt_id
        - is_vfile_allowed
        - date_created
        - date_modified
        - date_submitted
      properties:
        id:
          $ref: "#/components/schemas/id"
        filing_status:
          type: string
          description: "Choices: [get_started, processed, processing, compliance_errors, upload_failed, processing_errors, ready_file, ready_file_nil, awaiting_review, rejected, filed, canceled]"
        outcome_type:
          type: string
          description: "Choices: [payment_due, payment_madeno_payment_due, refund_due, refund_requested, refund_carried_forward, refund_received, nil_return]"
        outcome_amount:
          type: number
          format: float
        comment_accept_reject:
          type: string
          description: "Comment during approval process"
        entity:
          $ref: "#/components/schemas/id"
        entity_name:
          type: string
        entity_colour:
          type: string
          example: "rgba(4%,4,4%,0.4)"
        vat_number_period:
          $ref: "#/components/schemas/id"
        filing_type:
          $ref: "#/components/schemas/id"
        country:
          $ref: "#/components/schemas/id"
        country_iso:
          type: string
        filing_period:
          type: string
        months_to_add:
          type: integer
        date_filing_due:
          type: string
          example: "2020-01-07"
        date_period_ending:
          type: string
          example: "2020-02"
        from_day_weekend:
          type: string
        is_color_inverted:
          type: boolean
          description: "A deadline gets its colour inverted signifies that it no longer needs to be dealt with"
        number_files_attached:
          type: integer
        is_vat_return_submitted:
          type: boolean
          description: "Set to true when VAT return attached has been submitted by vsuite (ie. MTD for UK)"
        submission_receipt_id:
          type: string
          description: "Receipt ID received when submitting with MTD"
        is_vfile_allowed:
          type: boolean
        date_created:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
        date_submitted:
          type: string
          format: date-time

    VatNumberSpecificList:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/VatNumberSpecific"
    VatNumberSpecific:
      type: object
      required:
        - id
        - country
        - number
        - date_registration
        - list_vat_number_period
        - has_client_transaction_types
        - date_modified
        - date_created
      properties:
        id:
          $ref: "#/components/schemas/id"
        country:
          type: object
          required:
            - id
            - name
            - iso
          properties:
            id:
              $ref: "#/components/schemas/id"
            name:
              type: string
            iso:
              type: string
              description: "Two letter iso code of the country"
              example: "GB"
        number:
          type: string
        date_registration:
          type: string
          format: date-time
        list_vat_number_period:
          type: array
          items:
            type: object
            properties:
              period:
                type: object
                required:
                  - id
                  - country
                  - filing_period
                  - filing_type
                  - is_day_editable
                  - is_month_editable
                  - comment
                  - is_automatically_created
                properties:
                  id:
                    $ref: "#/components/schemas/id"
                  country:
                    $ref: "#/components/schemas/id"
                  filing_period:
                    type: string
                    description: "Choices: [monthly, monthly_extension, bi-monthly, quarterly, quarterly_extension, annually, semi-annually, tri-annually]"
                  filing_type:
                    type: object
                    required:
                      - id
                      - name_short
                      - name_long
                    properties:
                      id:
                        $ref: "#/components/schemas/id"
                      name_short:
                        type: string
                      name_long:
                        type: string
                  is_day_editable:
                    type: boolean
                  is_month_editable:
                    type: boolean
                  comment:
                    type: string
                  is_automatically_created:
                    type: boolean
              day_month:
                type: integer
              working_day_number:
                type: integer
              ending_month:
                type: array
                items:
                  type: integer
              internal_ref:
                type: string
              date_modified:
                type: string
                format: date-time
              date_created:
                type: string
                format: date-time
        has_client_transaction_types:
          type: boolean
        date_modified:
          type: string
          format: date-time
        date_created:
          type: string
          format: date-time    
          
    VatNumberAllList:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/VatNumberAll"
    VatNumberAll:
      type: object
      required:
        - id
        - entity
        - country
        - number
        - has_client_transaction_types
        - date_registration
        - date_modified
        - date_created
      properties:
        id:
          $ref: "#/components/schemas/id"
        entity:
          type: object
          required:
            - id
            - name
            - colour
          properties:
            id:
              $ref: "#/components/schemas/id"
            name:
              type: string
            colour:
              type: string
              example: "rgba(4%,4,4%,0.4)"
        country:
          type: object
          required:
            - id
            - name
            - iso
            - is_eu
          properties:
            id:
              $ref: "#/components/schemas/id"
            name:
              type: string
            iso:
              type: string
              example: "GB"
            is_eu:
              type: boolean
        number:
          type: string
        has_client_transaction_types:
          type: boolean
        date_registration:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
        date_created:
          type: string
          format: date-time

    VatReturnEntryList:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/VatReturnEntry"
    VatReturnEntry:
      type: object
      required:
        - standard_template
        - meta_draft_return_box
        - total_net
        - total_vat
        - value_other
        - name
        - description
        - group
        - color
        - position
        - is_net
        - is_vat
        - is_other
      properties:
        standard_template:
          $ref: "#/components/schemas/id"
        meta_draft_return_box:
          $ref: "#/components/schemas/id"
        total_net:
          type: number
          format: float
        total_vat:
          type: number
          format: float
        value_other:
          type: string
        name:
          type: string
        description:
          type: string
        position:
          type: integer
        group:
          type: string
        color:
          type: string
        is_net:
          type: boolean
        is_vat:
          type: boolean
        is_other:
          type: boolean

    StandardTemplateList:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/StandardTemplate"
    StandardTemplate:
      type: object
      required:
        - comment_accept_reject
        - date_created
        - date_entries_modified
        - dote_modified
        - error_reason
        - id
        - is_data_processing
        - is_data_processing_aggregate
        - is_polish_template
        - need_process_vat_return
        - no_data
        - number_transactions_not_processed
        - old_vsuite
        - old_vsuite_file_generated
        - saved_filing_period
        - system_error
        - total_net_ecsl
        - upload_failed
      properties:
        comment_accept_reject:
          type: string
        date_created:
          type: string
          format: date-time
        date_entries_modified:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
        error_reason:
          type: string
        id:
          $ref: "#/components/schemas/id"
        is_data_processing:
          type: boolean
        is_data_processing_aggregate:
          type: boolean
        is_polish_template:
          type: boolean
        need_process_vat_return:
          type: boolean
        no_data:
          type: boolean
        number_transactions_not_processed:
          type: integer
        old_vsuite:
          type: boolean
        old_vsuite_file_generated:
          type: boolean
        saved_filing_period:
          $ref: "#/components/schemas/id"
        system_error:
          type: boolean
        total_net_ecsl:
          type: number
          format: float
        upload_failed:
          type: boolean

    StandardTemplateAggregateList:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/StandardTemplateAggregateList"
    StandardTemplateAggregate:
      type: object
      required:
        - id
        - client_transaction_type
        - client_transaction_type_name
        - vg_transaction_type
        - vg_transaction_type_name
        - input_output
        - blank_aggregate
        - total_net
        - total_vat
        - total_rows
        - total_errors
        - total_warnings
        - status
        - running_job
      properties:
        id:
          $ref: "#/components/schemas/id"
        client_transaction_type:
          $ref: "#/components/schemas/id"
        client_transaction_type_name:
          type: string
        vg_transaction_type:
          $ref: "#/components/schemas/id"
        vg_transaction_type_name:
          type: string
        input_output:
          type: string
        blank_aggregate:
          type: boolean
        total_net:
          type: number
          format: float
        total_vat:
          type: number
          format: float
        total_rows:
          type: integer
        total_errors:
          type: integer
        total_warnings:
          type: integer
        status:
          type: string
        running_job:
          type: boolean

    StandardTemplateEntryList:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/StandardTemplateEntry"
    StandardTemplateEntry:
      type: object
      required:
        - id
        - standard_template
        - invoice_number
        - invoice_date
        - partner_name
        - partner_country
        - partner_vat_number
        - net_orig
        - vat_orig
        - gross_orig
        - comments
        - ccy_transaction
        - client_transaction_type
        - warnings
      properties:
        id:
          $ref: "#/components/schemas/id"
        standard_template:
          $ref: "#/components/schemas/id"
        invoice_number:
          type: string
        invoice_date:
          type: string
          example: "YYYY-MM-DD"
        partner_name:
          type: string
        partner_country:
          type: string
          example: "GB"
        partner_vat_number:
          type: string
        net_orig:
          type: number
          format: float
        vat_orig:
          type: number
          format: float
        gross_orig:
          type: number
          format: float
        comments:
          type: string
        ccy_transaction:
          type: string
          example: "EUR"
        client_transaction_type:
          type: string
        warnings:
          type: array
          items:
            type: string
            example: "Type of compliance warning, denoted by a warning code"
      
    StandardTemplateEntryErrorList:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/StandardTemplateEntryError"
    StandardTemplateEntryError:
      type: object
      required:
        - id
        - standard_template
        - invoice_number
        - invoice_date
        - partner_name
        - partner_country
        - partner_vat_number
        - net_orig
        - vat_orig
        - gross_orig
        - comments
        - ccy_transaction
        - client_transaction_type
        - warnings
        - errors
      properties:
        id:
          $ref: "#/components/schemas/id"
        standard_template:
          $ref: "#/components/schemas/id"
        invoice_number:
          type: string
        invoice_date:
          type: string
          example: "YYYY-MM-DD"
        partner_name:
          type: string
        partner_country:
          type: string
          example: "GB"
        partner_vat_number:
          type: string
        net_orig:
          type: number
          format: float
        vat_orig:
          type: number
          format: float
        gross_orig:
          type: number
          format: float
        comments:
          type: string
        ccy_transaction:
          type: string
          example: "EUR"
        client_transaction_type:
          type: string
        warnings:
          type: array
          items:
            type: string
            example: "Type of compliance warning, denoted by a warning code"
        errors:
          type: array
          items:
            type: string
            example: "Type of compliance error, denoted by a error code"

    StandardTemplateTransactionType:
      type: object
      required:
        - entries
        - entry_errors
      properties:
        entries:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                $ref: "#/components/schemas/id"
              name:
                type: string
                example: "Local sale (CN)"
        entry_errors:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                $ref: "#/components/schemas/id"
              name:
                type: string
                example: "Local sale (CN)"

paths:

  /entity:
    
    get:
      summary: List entities
      operationId: listEntities
      description: ->
        List the entities that the user may access (view and/or modify). 
        Any authenticated user may call this endpoint. 
        An empty list is returned if the user does not have access to 
        any entity or does not have the required permissions.
      tags:
        - Entity
      parameters:
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of entities
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntity"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"

    post:
      summary: Create a new entity
      operationId: createEntity
      description: >-
        Create new entity. Only admins, managers and account managers may create new entities. 
        NOTE! If the entity is to be assigned to a hidden organization 
        (i.e. the flag `hide_organization` is set to `True` in the request data) 
        and a hidden organization already exists within the user's management group, 
        the new entity is assigned to that organization 
        (NOTE that a single hidden organization may existing within a management group), 
        otherwise a new hidden organization is created. NOTE! If the new entity is intended 
        to be part of a "single entity" management group 
        (i.e. the flag `is_single_entity` is set to `True` in the request data), 
        it will automatically be assigned to a hidden organization 
        (this is hardcoded also in the front-end), and the `is_single_entity` 
        flag will be set `True` on the management group. NOTE! On creating a new entity, 
        full permissions on this entity are assigned to: 
        the creating user; all managers that have access to the organization containing this entity;
        all admins in the same management group.
      tags:
        - Entity
      responses:
        '201':
          description: Entity was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden / Limited to one entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                organization:
                  $ref: "#/components/schemas/id"
                country:
                  $ref: "#/components/schemas/id"
                colour:
                  type: string
                  example: "rgba(4%,4,4%,0.4)"
                  description: "String representing RGBA or HSL colour. Example: rgba(4%,4,4%,0.4)"
                tax_number:
                  type: string
                  description: "Tax Identification Number. This is NOT the VAT number."
              required:
                - name
                - organization
                - colour


  /entity/{entity_id}:

    get:
      summary: Get a specific entity
      operationId: getSpecificEntity
      description: Retrieve the entity data. Only users with the `entity_management` view permission may call this endpoint.
      tags:
        - Entity
      responses:
        '200':
          description: Entity was found and could be retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '404':
          description: Entity does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"

    put:
      summary: Edit specific entity
      operationId: putSpecificEntity
      description: Update entity data. Only users with the `entity_management` modify permission may call this endpoint.
      tags:
        - Entity
      responses:
        '200':
          description: Entity was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '404':
          description: Entity does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                organization:
                  $ref: "#/components/schemas/id"
                country:
                  $ref: "#/components/schemas/id"
                colour:
                  type: string
                  example: "rgba(4%,4,4%,0.4)"
                  description: "String representing RGBA or HSL colour. Example: rgba(4%,4,4%,0.4)"
                tax_number:
                  type: string
                  description: "Tax Identification Number. This is NOT the VAT number."
              required:
                - name
                - organization
                - colour

    patch:
      summary: Patch specific entity
      operationId: patchSpecificEntity
      description: ->
        Partial update of entity data. Only users with the `entity_management' 
        modify permission may call this endpoint.
      tags:
        - Entity
      responses:
        '200':
          description: Entity was partially updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '404':
          description: Entity does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                organization:
                  $ref: "#/components/schemas/id"
                country:
                  $ref: "#/components/schemas/id"
                colour:
                  type: string
                  example: "rgba(4%,4,4%,0.4)"
                  description: "String representing RGBA or HSL colour. Example: rgba(4%,4,4%,0.4)"
                tax_number:
                  type: string
                  description: "Tax Identification Number. This is NOT the VAT number."

    delete:
      summary: Delete an entity
      operationId: deleteEntity
      description: ->
        Deletes the entity. Only users with the `entity_management` 
        modify permission may call this endpoint. 
        NOTE! Only entities with no VAT returns generated may be deleted.
      tags:
        - Entity
      responses:
        '204':
          description: Entity was deleted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden, Entity can't be deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /organization:

    get:
      summary: List organizations
      operationId: listOrganizations
      description: ->
        List the organizations that the user may access (view and/or modify). 
        Any authenticated user may call this endpoint. 
        An empty list is returned if the user does not have access to any 
        organizations or does not have the required permissions.
      tags:
        - Organization
      parameters:
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of organizations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganization"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"

    post:
      summary: Create a new organization
      operationId: createOrganization
      description: >-
        Create new organization. Only admins and managers may create new organizations. 
        On creating a new organization, full permissions on this organization are 
        assigned to the creating user and all the admins in the same management group.
      tags:
        - Organization
      parameters:
        - name: management_group
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/id"
      responses:
        '201':
          description: Organization was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                management_group:
                  $ref: "#/components/schemas/id"
                hide_organization:
                  type: boolean
                  description: "User wanted to attach an entity without a team"
                internal_ref:
                  type: string
                  description: "Internal reference ID to your system."
                vflow_block_weekends:
                  type: boolean
                  description: "When TRUE, deadlines in vFlow will be moved to Friday if they fall on weekend"
              required:
                - name


  /organization/{organization_id}:

    get:
      summary: Get a specific organization
      operationId: getSpecificOrganization
      description: Retrieve the organization data. Only users with the `org_management` view permission may call this endpoint.
      tags:
        - Organization
      responses:
        '200':
          description: Organization was found and could be retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '404':
          description: Organization does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"

    put:
      summary: Edit specific organization
      operationId: putSpecificOrganization
      description: Update organization data. Only users with the `org_management` modify permission may call this endpoint.
      tags:
        - Organization
      responses:
        '200':
          description: Organization was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Cannot change the management group of an organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
        '404':
          description: Organization does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                management_group:
                  $ref: "#/components/schemas/id"
                hide_organization:
                  type: boolean
                  description: "User wanted to attach an entity without a team"
                internal_ref:
                  type: string
                  description: "Internal reference ID to your system."
                vflow_block_weekends:
                  type: boolean
                  description: "When TRUE, deadlines in vFlow will be moved to Friday if they fall on weekend"
              required:
                - name

    patch:
      summary: Patch specific organization
      operationId: patchSpecificOrganization
      description: ->
        Partial update of organization data. Only users with the `org_management' 
        modify permission may call this endpoint.
      tags:
        - Organization
      responses:
        '200':
          description: Organization was partially updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Cannot change the management group of an organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
        '404':
          description: Organization does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                management_group:
                  $ref: "#/components/schemas/id"
                hide_organization:
                  type: boolean
                  description: "User wanted to attach an entity without a team"
                internal_ref:
                  type: string
                  description: "Internal reference ID to your system."
                vflow_block_weekends:
                  type: boolean
                  description: "When TRUE, deadlines in vFlow will be moved to Friday if they fall on weekend"

    delete:
      summary: Delete an organization
      operationId: deleteOrganization
      description: ->
        Deletes the organization. Only users with the `org_management` 
        modify permission may call this endpoint. NOTE! Only organizations 
        with no entities may be deleted. If the organization contains entities, 
        these need to be deleted/moved to a different organization first.
      tags:
        - Organization
      responses:
        '204':
          description: Organization was deleted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden, organization can't be deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /country:

    get:
      summary: List countries
      operationId: listCountries
      tags:
        - Country
      parameters:
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of countries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCountries"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"


  /currency:

    get:
      summary: List currencies
      operationId: listCurrencies
      tags:
        - Currency
      parameters:
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of currencies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCurrencies"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"


  /vFile/period:

    get:
      summary: List periods
      operationId: listPeriods
      tags:
        - Period
      parameters:
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of currencies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPeriods"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"


  /vFile/savedFilingPeriod:

    post:
      summary: List saved filing periods
      description: "SavedFilingPeriod corresponds to a calendar event (filing date)"
      operationId: listSFP
      tags:
        - Saved filing periods
      parameters:
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of saved filing periods. Filtering applied if specified in request body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSavedFilingPeriods"
        '400':
          description: Invalid date range (if given in request body)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                list_countries:
                  type: array
                  items:
                    type: string
                  description: "list of country ids to filter saved filing periods with"
                list_entities:
                  type: array
                  items:
                    type: string
                  description: "list of entity ids to filter saved filing periods with"
                date_start:
                  type: string
                  description: "start of date range"
                  example: "YYYY-MM-DD"
                date_end:
                  type: string
                  description: "end of date range"
                  example: "YYYY-MM-DD"
                stage:
                  type: string
                  description: "Saved filing period stage. Choice of [due, preparing, filed]"


  /vFile/savedFilingPeriod/{saved_filing_period_id}:

    get:
      summary: Get a specific saved filing period
      operationId: getSpecificSFP
      description: SavedFilingPeriod correspond to a calendar event (filing date)
      tags:
        - Saved filing periods
      responses:
        '200':
          description: Saved filing period was found and could be retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedFilingPeriod"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '404':
          description: Saved filing period does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"

    patch:
      summary: Patch specific saved filing period
      operationId: patchSpecificSFP
      description: ->
        SavedFilingPeriod correspond to a calendar event (filing date)
      tags:
        - Saved filing periods
      responses:
        '200':
          description: Saved Filing Period was partially updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedFilingPeriod"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filing_status:
                  type: string
                  description: "Choices: [get_started, processed, processing, compliance_errors, upload_failed, processing_errors, ready_file, ready_file_nil, awaiting_review, rejected, filed, canceled]"
                outcome_type:
                  type: string
                  description: "Choices: [payment_due, payment_madeno_payment_due, refund_due, refund_requested, refund_carried_forward, refund_received, nil_return]"
                outcome_amount:
                  type: number
                  format: float
                comment_accept_reject:
                  type: string
                  description: "Comment during approval process"

    put:
      summary: Edit specific saved filing period
      operationId: editSpecificSFP
      description: ->
        SavedFilingPeriod correspond to a calendar event (filing date)
      tags:
        - Saved filing periods
      responses:
        '200':
          description: Saved Filing Period was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedFilingPeriod"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filing_status:
                  type: string
                  description: "Choices: [get_started, processed, processing, compliance_errors, upload_failed, processing_errors, ready_file, ready_file_nil, awaiting_review, rejected, filed, canceled]"
                outcome_type:
                  type: string
                  description: "Choices: [payment_due, payment_madeno_payment_due, refund_due, refund_requested, refund_carried_forward, refund_received, nil_return]"
                outcome_amount:
                  type: number
                  format: float
                comment_accept_reject:
                  type: string
                  description: "Comment during approval process"  


  /vFile/vatNumber?entity_id='all':

    get:
      summary: List all vat numbers
      operationId: listAllVatnumbers
      description: ->
        Retrieve a list of all vat numbers
      tags:
        - Vat number
      parameters:
        - name: entity_id
          in: query
          description: "Gets vat numbers for all entities"
          required: true
          schema:
            type: string
            example: "all"
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of vat numbers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatNumberAllList"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /vFile/vatNumber?entity_id='<entity_id>':

    get:
      summary: List entity vat numbers
      operationId: listEntityVatnumbers
      description: ->
        Retrieve a list of vat numbers for a specific entity
      tags:
        - Vat number
      parameters:
        - name: entity_id
          in: query
          description: "Filters for vat numbers in a specific entity"
          required: true
          schema:
            type: string
            example: "<entity_id>"
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of vat numbers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatNumberSpecificList"
        '400':
          description: Entity does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
    

  /vFile/vatNumber:

    post:
      summary: Create a new vat number
      operationId: createVatNumber
      description: >-
        Create a new VAT number. Only admins, managers, account managers and registrations 
        account managers may create new VAT numbers. On creating a new VAT number, 
        full permissions on this VAT number are assigned to: 
        the creating user; all account managers that have access to the entity that 
        this VAT number belongs to; all managers that have access to the organization 
        containing the entity that the VAT number belongs to; all admins in the same management group.
      tags:
        - Vat number
      responses:
        '201':
          description: Vat number was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatNumberSpecific"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - entity
                - country
                - number
                - date_registration
                - list_vat_number_period
              properties:
                entity:
                  $ref: "#/components/schemas/id"
                country:
                  $ref: "#/components/schemas/id"
                number:
                  type: string
                  description: "Vat number"
                  example: "GB01010123"
                date_registration:
                  type: string
                  example: "YYYY-MM-DD"
                list_vat_number_period:
                  type: array
                  items:
                    type: object
                    required:
                      - period
                      - day_month
                      - ending_month
                      - internal_ref
                    properties:
                      period:
                        $ref: "#/components/schemas/id"
                      day_month:
                        type: integer
                      ending_month:
                        type: array
                        items:
                          type: integer
                      internal_ref:
                        type: string


  /vFile/vatNumber/{vat_number_id}/:

    put:
      summary: Edit specific vat number
      operationId: putSpecificVatNumber
      description: "Update an existing VAT number. Only users with the 'vat_reg_info' modify permission may call this endpoint."
      tags:
        - Vat number
      responses:
        '200':
          description: Vat number was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatNumberSpecific"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
        '404':
          description: Vat number does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - entity
                - country
                - number
                - date_registration
                - list_vat_number_period
              properties:
                entity:
                  $ref: "#/components/schemas/id"
                country:
                  $ref: "#/components/schemas/id"
                number:
                  type: string
                  description: "Vat number"
                  example: "GB01010123"
                date_registration:
                  type: string
                  example: "YYYY-MM-DD"
                list_vat_number_period:
                  type: array
                  items:
                    type: object
                    required:
                      - period
                      - day_month
                      - ending_month
                      - internal_ref
                    properties:
                      period:
                        $ref: "#/components/schemas/id"
                      day_month:
                        type: integer
                      ending_month:
                        type: array
                        items:
                          type: integer
                      internal_ref:
                        type: string

    patch:
      summary: Partial update specific vat number
      operationId: patchSpecificVatNumber
      description: "Perform a partial update on an existing VAT number. Only users with the 'vat_reg_info' modify permission may call this endpoint."
      tags:
        - Vat number
      responses:
        '200':
          description: Vat number was partially updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatNumberSpecific"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
        '404':
          description: Entity does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entity:
                  $ref: "#/components/schemas/id"
                country:
                  $ref: "#/components/schemas/id"
                number:
                  type: string
                  description: "Vat number"
                  example: "GB01010123"
                date_registration:
                  type: string
                  example: "YYYY-MM-DD"
                list_vat_number_period:
                  type: array
                  items:
                    type: object
                    required:
                      - period
                      - day_month
                      - ending_month
                      - internal_ref
                    properties:
                      period:
                        $ref: "#/components/schemas/id"
                      day_month:
                        type: integer
                      ending_month:
                        type: array
                        items:
                          type: integer
                      internal_ref:
                        type: string

    delete:
      summary: Delete a vat number
      operationId: deleteVatNumber
      description: ->
        Mark an existing VAT number as deleted. NOTE! The VAT number is NOT physically deleted.
      tags:
        - Vat number
      responses:
        '204':
          description: Vat number was marked as deleted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden, organization can't be deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /vFile/generateVatReturn/{standard_template_id}/:

    post:
      summary: Generate vat return
      description: "Generate the vat return for a standard template"
      operationId: generateDraftReturn
      tags:
        - VAT return
      responses:
        '200':
          description: Vat return generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatReturnEntry"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '416':
          description: Country not available in processing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /vFile/standardTemplate/uploadJobStart/{standard_template_id}/:

    post:
      summary: Run standard template compliance checks
      description: ->
        Call to start compliance checks for uploaded 
        saved_filing_period files, gamechanger files, and JSON uploads.
        Creates a new StandardTemplateJob for each file sent in request body. 
        This will overwrite all previous transaction data for this 
        standard template, including all versions.
      operationId: runSTComplianceChecks
      tags:
        - Standard template
      responses:
        '201':
          description: Jobs started
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                standard_template_file_list:
                  type: array
                  description: "List of saved_filing_period file ids"
                  items:
                    $ref: "#/components/schemas/id"
                standard_template_json_upload_list:
                  type: array
                  description: "List of JSON upload ids"
                  items:
                    $ref: "#/components/schemas/id"
                standard_template_gc_file_list:
                  type: array
                  description: "List of game changer file ids"
                  items:
                    $ref: "#/components/schemas/id"


  /vFile/vatReturnEntry/{standard_template_id}/:

    get:
      summary: List vat return entries
      operationId: listVatReturnEntries
      description: ->
        Retrieve a list of vat return entries for a standard template
      tags:
        - VAT return
      parameters:
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of vat numbers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatReturnEntryList"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /vFile/standardTemplate/:

    get:
      summary: List standard templates
      operationId: listStandardTemplates
      description: ->
        Retrieve a list of standard templates for a given saved filing period
      tags:
        - Standard template
      parameters:
        - name: saved_filing_period
          in: query
          description: Saved_filing_period id to get standard templates for
          required: true
          schema:
            $ref: "#/components/schemas/id"
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of standard templates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardTemplateList"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"

    post:
      summary: Create a new standard tempalte
      operationId: createStandardTemplate
      description: >-
        Create a new standard template for a given saved filing period
      tags:
        - Standard template
      responses:
        '201':
          description: Standard template was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardTemplate"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"
  

  /vFile/standardTemplate/{standard_template_id}:

    get:
      summary: Retrieve standard template
      operationId: getStandardTemplate
      description: ->
        Retrieve a standard template
      tags:
        - Standard template
      responses:
        '200':
          description: Retrieve standard template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardTemplate"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"

    put:
      summary: Edit specific standard template
      operationId: editSpecificStandardTemplate
      tags:
        - Standard template
      responses:
        '200':
          description: Standard template was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardTemplate"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"

    patch:
      summary: Partially edit specific standard template
      operationId: partiallyEditSpecificStandardTemplate
      tags:
        - Standard template
      responses:
        '200':
          description: Standard template was partially updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardTemplate"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /vFile/standardTemplateAggregate/{standard_template_id}/:

    get:
      summary: List aggregates
      operationId: listStandardTemplateAggregates
      description: ->
        Retrieve a list of standard template aggregates for a given standard template.
        An aggregate is a summary of all transactions for a transaction_type. It is useful 
        for getting a high level view of your standard template transaction data.
      tags:
        - Standard template
      parameters:
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of standard template aggregates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardTemplateAggregateList"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /vFile/standardTemplateEntry/{standard_template_id}/:

    get:
      summary: List entries
      operationId: listStandardTemplateEntries
      description: ->
        Retrieve a list of standard template entries for a given standard template. 
        An entry is a transaction without any compliance errors.
      tags:
        - Standard template
      parameters:
        - name: search
          in: query
          description: text string to search against all entry columns
          required: false
          schema:
            type: string
            example: "IC delivery of goods"
        - name: client_transaction_type
          in: query
          description: id of client transaction type to filter entries by
          required: false
          schema:
            $ref: "#/components/schemas/id"
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of standard template entries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardTemplateEntryList"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /vFile/standardTemplateEntryError/{standard_template_id}/:

    get:
      summary: List entry errors
      operationId: listStandardTemplateEntryErrors
      description: ->
        Retrieve a list of standard template entry errors for a given standard template. 
        An entry error is a transaction with at least one compliance error.
      tags:
        - Standard template
      parameters:
        - name: search
          in: query
          description: text string to search against all entry error columns
          required: false
          schema:
            type: string
            example: "IC delivery of goods"
        - name: client_transaction_type
          in: query
          description: id of client transaction type to filter entry errors by
          required: false
          schema:
            $ref: "#/components/schemas/id"
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of standard template entry errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardTemplateEntryErrorList"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"


  /vFile/standardTemplateTransactionTypes/{standard_template_id}/:

    get:
      summary: List transaction types
      operationId: listStandardTemplateTransactionTypes
      description: ->
        List of distinct client transaction types for entries and entry errors in a StandardTemplate
      tags:
        - Standard template
      responses:
        '200':
          description: List of distict transaction types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardTemplateTransactionType"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDict"