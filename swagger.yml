openapi: '3.0.2'
info:
  title: vsuite public api
  version: '1.0'
  description: Documentation for vsuites public API. Our public API lets you interact with key parts of the vsuite product
  license:
    name: MIT
  contact:
    name: vsuite technical team
    email: support@myvsuite.com
  x-logo:
    url: 'https://raw.githubusercontent.com/vatglobal/publicapi/master/vsuite_logo.png'
    altText: vsuite logo
tags:
  - name: Entity
    description: Manage your entities
  - name: Organization
    description: Manage your organizations
  - name: Countries
    description: Country and currency information
  - name: vFile
    description: Manage 

servers:
  - url: https://server.myvsuite.com/api/v1/

# Authentication
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: HTTP_AUTHORIZATION
  schemas:
    errorMessageDetail:
      type: array
      items:
        type: string
        example: Reason why authentication failed
    errorMessageNonField:
      type: object
      properties:
        non_field_errors:
          type: array
          items:
            type: string  
    id:
      type: string
      format: uuid
      example: fc096d1a-9535-4d8b-b504-d86a66d92de8
    ListEntity:
      type: object
      required:
        - count
        - next
        - previous
        - results
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/Entity"
    Entity:
      type: object
      required:
        - id
        - name
        - organization
        - country
        - colour
        - tax_number
        - internal_ref
      properties:
        id:
          $ref: "#/components/schemas/id"
        name:
          type: string
        organization:
          type: object
          required:
            - id
            - name
            - hide_organization
          properties:
            id:
              $ref: "#/components/schemas/id"
            name:
              type: string
            hide_organization:
              type: boolean
        country:
          $ref: "#/components/schemas/id"
        colour:
          type: string
          example: rgba(4%,4,4%,0.4)
          description: "String representing RGBA or HSL colour. Example: rgba(4%,4,4%,0.4)"
        tax_number: 
          type: string
          description: "Tax Identification Number. This is NOT the VAT number."



paths:
  /auth/entity:
    get:
      summary: List entities
      operationId: listEntities
      description: ->
        List the entities that the user may access (view and/or modify). 
        Any authenticated user may call this endpoint. 
        An empty list is returned if the user does not have access to 
        any entity or does not have the required permissions.
      tags:
        - Entity
      parameters:
        - name: limit
          in: query
          description: how many items to return in one page
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: how many items to offset (number of pages * limit size)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntity"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
    post:
      summary: Create a new entity
      operationId: createEntity
      description: >-
        Create new entity. Only admins, managers and account managers may create new entities. 
        NOTE! If the entity is to be assigned to a hidden organization 
        (i.e. the flag `hide_organization` is set to `True` in the request data) 
        and a hidden organization already exists within the user's management group, 
        the new entity is assigned to that organization 
        (NOTE that a single hidden organization may existing within a management group), 
        otherwise a new hidden organization is created. NOTE! If the new entity is intended 
        to be part of a "single entity" management group 
        (i.e. the flag `is_single_entity` is set to `True` in the request data), 
        it will automatically be assigned to a hidden organization 
        (this is hardcoded also in the front-end), and the `is_single_entity` 
        flag will be set `True` on the management group. NOTE! On creating a new entity, 
        full permissions on this entity are assigned to: 
        the creating user; all managers that have access to the organization containing this entity;
        all admins in the same management group.
      tags:
        - Entity
      responses:
        '201':
          description: Entity was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Unauthorized / Limited to one entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                organization:
                  $ref: "#/components/schemas/id"
                country:
                  $ref: "#/components/schemas/id"
                colour:
                  type: string
                  example: "rgba(4%,4,4%,0.4)"
                  description: "String representing RGBA or HSL colour. Example: rgba(4%,4,4%,0.4)"
                tax_number:
                  type: string
                  description: "Tax Identification Number. This is NOT the VAT number."
              required:
                - name
                - organization
                - colour
  
  /auth/entity/{entity_id}:
    get:
      summary: Get a specific entity
      operationId: getSpecificEntity
      description: Retrieve the entity data. Only users with the `entity_management` view permission may call this endpoint.
      tags:
        - Entity
      responses:
        '200':
          description: Entity was found and could be retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '404':
          description: Entity does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
    put:
      summary: Edit specific entity
      operationId: putSpecificEntity
      description: Update entity data. Only users with the `entity_management` modify permission may call this endpoint.
      tags:
        - Entity
      responses:
        '200':
          description: Entity was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '404':
          description: Entity does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                organization:
                  $ref: "#/components/schemas/id"
                country:
                  $ref: "#/components/schemas/id"
                colour:
                  type: string
                  example: "rgba(4%,4,4%,0.4)"
                  description: "String representing RGBA or HSL colour. Example: rgba(4%,4,4%,0.4)"
                tax_number:
                  type: string
                  description: "Tax Identification Number. This is NOT the VAT number."
              required:
                - name
                - organization
                - colour
    patch:
      summary: Patch specific entity
      operationId: patchSpecificEntity
      description: ->
        Partial update of entity data. Only users with the `entity_management' 
        modify permission may call this endpoint.
      tags:
        - Entity
      responses:
        '200':
          description: Entity was partially updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '404':
          description: Entity does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                organization:
                  $ref: "#/components/schemas/id"
                country:
                  $ref: "#/components/schemas/id"
                colour:
                  type: string
                  example: "rgba(4%,4,4%,0.4)"
                  description: "String representing RGBA or HSL colour. Example: rgba(4%,4,4%,0.4)"
                tax_number:
                  type: string
                  description: "Tax Identification Number. This is NOT the VAT number."
    delete:
      summary: Delete an entity
      operationId: deleteEntity
      description: ->
        Deletes the entity. Only users with the `entity_management` 
        modify permission may call this endpoint. 
        NOTE! Only entities with no VAT returns generated may be deleted.
      tags:
        - Entity
      responses:
        '204':
          description: Entity was deleted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageDetail"
        '403':
          description: Entity can't be deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessageNonField"
                
        
